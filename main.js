// ==UserScript==
// @name SkillBoxPumpItLMS_mod
// @description make LMS better
// @author Gargooie
// @require https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js
// @require https://gist.github// ==UserScript==
// @description make LMS better
// @author Gargooie
// @require https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js
// @require https://gist.github.com/raw/2625891/waitForKeyElements.js
// @version 26.01.2022
// @include https://go.skillbox.ru/*
// @grant    GM_addStyle
// ==/UserScript==

// wrap the script in a closure (opera, ie)
// do not spoil the global scope

//—Å–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è

//–û–¥–æ–±—Ä–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞
let greeting_middle_arr_1=["–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –í—Å–µ –∑–∞–¥–∞—á–∏ —Ä–µ—à–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!<br/>",
                         "–†–∞–±–æ—Ç–∞ –Ω–∞ –≤—ã—Å—à–∏–π –±–∞–ª–ª! –í—Å—ë –≤–µ—Ä–Ω–æ!<br/>",
                         "–í—Å–µ —Ä–µ—à–µ–Ω–∏—è –≤–µ—Ä–Ω—ã, –æ—Ç–ª–∏—á–Ω–æ! ",
                         "–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –ó–∞–¥–∞—á–∏ —Ä–µ—à–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!<br/>",
                         "–°—É–ø–µ—Ä, –≤—Å—ë —Ä–µ—à–µ–Ω–æ –≤–µ—Ä–Ω–æ!<br/>",
                         "–û—Ç–ª–∏—á–Ω–æ! –í—Å—ë –≤–µ—Ä–Ω–æ! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!<br/>",
                         "–í—Å—ë –≤–µ—Ä–Ω–æ! –í—ã –º–æ–ª–æ–¥–µ—Ü! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!<br/>",
                         "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –í—Å—ë —Ä–µ—à–µ–Ω–æ –≤–µ—Ä–Ω–æ!<br/>",
                         "–í—Å–µ —Ä–µ—à–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! ",
                         "–í—Å–µ –∑–∞–¥–∞—á–∏ —Ä–µ—à–µ–Ω—ã, –æ—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞. ",
                         "–û—à–∏–±–æ–∫ –Ω–µ—Ç, —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ! ",
                         "–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –æ—Ç–ª–∏—á–Ω–æ! ",
                         "–í—ã –º–æ–ª–æ–¥–µ—Ü, —Å–Ω–æ–≤–∞ –≤—Å—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! ",
                         "–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫, –æ—Ç–ª–∏—á–Ω–æ! ",
                          ];

//–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞
let greeting_middle_arr_2=["–ü—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é.",
                         "–ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é.",
                         "–ü—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.",
                         "–ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é.",
                         "–ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é.",
                         "–û—Ç–∫—Ä—ã–≤–∞—é —Å–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å",
                         "–ü—Ä–∏–Ω–∏–º–∞—é –≤–∞—à—É —Ä–∞–±–æ—Ç—É",
                         "–†–∞–±–æ—Ç—É –ø—Ä–∏–Ω–∏–º–∞—é",
                         "–ü—Ä–∏–Ω–∏–º–∞—é —Ä–∞–±–æ—Ç—É",
                         "–ü—Ä–∏–Ω–∏–º–∞—é –º–æ–¥—É–ª—å",
                         "–ó–∞—á–µ—Ç",
                         ];



let greeting_footer_arr=["–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!<br/>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ï–≤–≥–µ–Ω–∏–π  üññ",
                         "–•–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!<br/>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ï–≤–≥–µ–Ω–∏–π  üññ",
                         "–í—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ!<br/>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ï–≤–≥–µ–Ω–∏–π  üññ",
                         "–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ!<br/>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ï–≤–≥–µ–Ω–∏–π  üññ",
                         ]

//—Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞
let greeting_middle_result;
//—Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è –Ω–∏–∂–Ω–µ–≥–æ –±–ª–æ–∫–∞
let rand_greeting_footer_arr;
//–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –≤ –ø—Ä–∏–≤–µ—Å—Ç–≤–∏–µ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º
let rand_current_time_arr;
//–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
let current_time;
let current_hour;


//—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Å—Ç–≤–∏—è
function randomizer(number) {
  return Math.round(Math.random()*number);
}

function greeting_message_constructor(){
    greeting_middle_result= greeting_middle_arr_1[randomizer(greeting_middle_arr_1.length-1)]
        + greeting_middle_arr_2[randomizer(greeting_middle_arr_2.length-1)];
    rand_greeting_footer_arr = randomizer(greeting_footer_arr.length-1);
    //–∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏ –Ω–∏–∂–Ω–µ–≥–æ –±–ª–æ–∫–∞
    rand_greeting_footer_arr==greeting_footer_arr.length ? rand_greeting_footer_arr=greeting_footer_arr.length-1:"pass";
    rand_current_time_arr = Math.floor(Math.random() * 1.3);

    if (rand_current_time_arr ==1) { current_time = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"
                           }else{

                               if (current_hour === 0 || current_hour <= 4) {
                                   current_time = "–î–æ–±—Ä–æ–π –Ω–æ—á–∏";
                               } else if (4 < current_hour && current_hour <= 11) {
                                   current_time = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ";
                               } else if (18 < current_hour && current_hour < 24) {
                                   current_time = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä";
                               } else {
                              //     current_time = "<span class=\"time-of-the-day\">–î–æ–±—Ä—ã–π –¥–µ–Ω—å</span>";
                                   current_time = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å";
                               }
                           }

    GREETING_TITLE_WITHOUT_NAME = current_time + "!";
    GREETING_TITLE_WITH_NAME = current_time + ", ";
    GREETING_MIDDLE = greeting_middle_result;
    GREETING_FOOTER = greeting_footer_arr[rand_greeting_footer_arr];
    current_hour = new Date().getHours();
};

let GREETING_TITLE_WITHOUT_NAME;
let GREETING_TITLE_WITH_NAME;
let GREETING_MIDDLE;
let GREETING_FOOTER;
let x;

const GREETING_MIDDLE_SECOND = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –º–Ω–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ.<br/>\
–ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ –∏ –≤—ã —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –±–æ–ª–µ–µ —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª–∏ –Ω–∞ –∫—É—Ä—Å.<br/><br/>–ü–æ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç–µ:<br/>\
–ó–∞–¥–∞—á–∏ —Ä–µ—à–µ–Ω—ã –≤–µ—Ä–Ω–æ. –†–∞–∑–±–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–¥–µ–æ.<br/>–ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é."



greeting_message_constructor();


const INSERT_CYRILLYC_NAME_IN_GREETING = true; 	// –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ true, —Ç–æ –∫ GREETING_TITLE –¥–æ–±–∞–≤–∏—Ç—Å—è –∏–º—è –∏ !
const COMPACT_HEADER = false; 										// –µ—Å–ª–∏ true - –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–±–æ—Ç—ã –±—É–¥–µ—Ç –∫–æ–º–ø–∞–∫—Ç–µ–Ω
const HIDE_EMPTY_COURSES = false;
const HIDE_REPORT_ROW = true; 								// –µ—Å–ª–∏ true - —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è
const SHOW_TASK_LINK = true;

const button_css = {
    'color': '#fff', 'margin': '0 10px',
    'display': 'inline-block', 'min-width': '20px', 'border': '1px solid',
    'cursor': 'pointer', 'padding': '8px 20px'
};

const button_settings = {
    'background-color': 'cadetblue',
    'font-size': '1rem'
};

// css for unsticky user panel
const user_panel_remove_sticky_and_paddings = {
    'display': 'flex',
    'flex-direction': 'row-reverse',
    'justify-content': 'flex-end'
};

const sendel_row = {'margin': '10px 30px'};

var APPEND_ROWREPORT_ELEMENT = 'app-comment-form';

const SELECTOR_APPROVE_BUTTON = '.comments-teacher__button.ui-sb-button--small.ui-sb-button--default.ui-sb-button--view-1.success'; // –ø—Ä–∏–Ω—è—Ç—å
const SELECTOR_REJECT_BUTTON = '.comments-teacher__button.ui-sb-button--small.ui-sb-button--default.ui-sb-button--view-1.danger'; // –æ—Ç–∫–ª–æ–Ω–∏—Ç—å

const HOMEWORK_PANELS_LIST = '.homeworks-panel-accordion'; // –ø–∞–Ω–µ–ª—å–∫–∏ –∫—É—Ä—Å–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
const HOMEWORK_TITLE_LIST_CLASS = '.homeworks__header';
const HIDE_EMPTY_HW_CHECKBOX_CLASS = 'hide_empty_hw_checkbox';
//const SIMPLE_HOOKER = 'app-comment-form';

(function (window, undefined) {
    // normalized window
    var w = unsafeWindow != "undefined" ? unsafeWindow : window;

    // do not run in frames
    if (w.self != w.top) {
        return;
    }

    // additional url check.
    // Google Chrome do not treat @match as intended sometimes.
    if (/https:\/\/go.skillbox.ru\/homeworks/.test(w.location.href)) {
        $(document).ready(function () {
            waitForKeyElements(HOMEWORK_TITLE_LIST_CLASS, appendSettingsButton);
            waitForKeyElements(SELECTOR_APPROVE_BUTTON, pumpIt);
            //waitForKeyElements(SELECTOR_APPROVE_BUTTON, addString);
            // waitForKeyElements(SIMPLE_HOOKER, simple_function);

            if (HIDE_EMPTY_COURSES) {
                waitForKeyElements(HOMEWORK_PANELS_LIST, hideCoursesWithZeroHomeworks);
            }

            addGlobalStyle(".over {   background-color: black;\
  animation-name: greenblink;\
  animation-duration: 0.5s;\
  border: 0px;}\
  @keyframes greenblink {\
   0%  {background-color: black;}\
  25%  {background-color: #7CFC00;}\
  50%  {background-color: black;}}");
        });
    }
//function simple_function(){
//    console.log("check");
//    var flag = $(".homework-subheader__theme-title")[0].innerText;
//    console.log(flag);
//}


    function pumpIt() {
        if (!HIDE_REPORT_ROW) {

            generateReportRow();


        }

        addGreeting();
        compactHomeworkTitle();
        bakeHeader();
    }

    // function addString() {
    //     if (SHOW_TASK_LINK) {
    //
    //         generateReportRow();
    //         showMyString();
    //
    //     }
    //
    //     addGreeting();
    //     compactHomeworkTitle();
    //     bakeHeader();
    // }


    function hideCoursesWithZeroHomeworks(item) {
        let statusToCheck = $(item).find('.description__wait').text();

        if (statusToCheck == '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫—É: 0') {
            $(item).hide();
        }
    }

    // function hideCoursesWithZeroHomeworks(item) {
    //     let statusToCheck = $(item).find('.item__all ng-star-inserted').text();
    //     console.log(statusToCheck);
    //     if (statusToCheck == '2 —Ä–∞–±–æ—Ç—ã') {
    //         $(item).hide();
    //     }
    // }

    function appendSettingsButton(item) {

        x =randomizer(100);
        console.log(x);
        greeting_message_constructor();
        console.log(GREETING_MIDDLE);

        let settingsButton = $('<input>', {
            class: 'sendel_input',
            type: 'checkbox',
            id: HIDE_EMPTY_HW_CHECKBOX_CLASS,
        })
            .css(button_css)
            .css(button_settings)
            .click(toggleShowEmptyCourses);

        $('<div>', {id: 'lms_settings'})
            .append(settingsButton)
            .append($('<label>', {for: HIDE_EMPTY_HW_CHECKBOX_CLASS, text: '–ü–æ–∫–∞–∑–∞–Ω—ã –∫—É—Ä—Å—ã –±–µ–∑ –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞–±–æ—Ç'}))
            .insertAfter(item);

        item.hide();
    }

    function toggleShowEmptyCourses() {
        const checkboxShowEmptyCourses = $('#' + HIDE_EMPTY_HW_CHECKBOX_CLASS);

        if (checkboxShowEmptyCourses.is(':checked')) {
            $(HOMEWORK_PANELS_LIST).show();
        } else {
            $(HOMEWORK_PANELS_LIST).each(function () {
                hideCoursesWithZeroHomeworks($(this))
            });
        }
    }

    function addGlobalStyle(css) {
        $('head').append($('<style>', {type: 'text/css', text: css}));
    }

    function generateResultAndCopyToBuffer(student, module, result, course) {
        $('#report')
            .val([todayDateFormatted(), student, module, result, window.location.href, course].join("\t"))
            .select();
        document.execCommand("copy");
    }

    let approveHomework = () => clickOnElement(SELECTOR_APPROVE_BUTTON, 500);
    let rejectHomework = () => clickOnElement(SELECTOR_REJECT_BUTTON, 500);

    let clickOnElement = (selector, timeout) => setTimeout(
        () => $(selector).trigger('click'), timeout);

    let getStudentName = () => $(".info__fullname")[0].innerText;
    let getModuleName = () => $(".homework-subheader__theme-title")[0].innerText;
    let getCommentText = () => $(".comment-card__message")[0].innerText;
    //let getMessageCount = () => $(".homework-subheader__theme-title")[0].innerText;
    let getMessageCount = () => $(document.getElementsByClassName("comments-topic--message-count skb-p1 ng-star-inserted"));


//document.getElementsByClassName('test')

    function generateReportRow() {
        var module_full = $(".homework-subheader__theme-title")[0].innerText.split(".")[0];
        var module = module_full.split(":")[0].replace("–¢–µ–º–∞ ", "");
        const student = getStudentName();

        var course = $(".homework-course-info__name")[0].innerText;


        var reportRow = todayDateFormatted() + "\t" + student + "\t" + module + "\t \t" + window.location.href + "\t" + course;

        let containerMain = $('<div>', {id: 'sendel-container-main'});
        let containerRowReport = $('<div>', {id: 'sendel-copy-row'});
        let containerCopyUrl = $('<div>', {id: 'sendel-p-copy-url'});


        let done = $('<button>', {text: 'üëç –∑–∞—á–µ—Ç', class: 'skillbox-btn'})
            .css({'backgroundColor': '#2fa52f'})
            .css(button_css);
        let rework = $('<button>', {text: '‚úñÔ∏è –Ω–µ–∑–∞—á–µ—Ç', class: 'skillbox-btn'})
            .css({'backgroundColor': '#f84949'})
            .css(button_css);

        done.appendTo(containerRowReport)
        rework.appendTo(containerRowReport)

        let inputCopyRowToReport = $('<input>', {
            type: 'text',
            id: 'report',
            value: reportRow,
            name: 'sendel-copy-row',
            click: function () {
                this.select();
                document.execCommand("copy");
                $('#sendel-copy-row').append('  —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
            }
        })
            .css({"width": "100%", 'margin-bottom': '10px'});

        //–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞—á–µ—Ç/–Ω–µ–∑–∞—á–µ—Ç
        done.click(function () {
            var result = '–∑–∞—á–µ—Ç';
            generateResultAndCopyToBuffer(student, module, result, course)
            approveHomework();
        });

        rework.click(function () {
            var result = '–Ω–µ–∑–∞—á–µ—Ç';
            generateResultAndCopyToBuffer(student, module, result, course)
            rejectHomework();
        });

        //appends to containers
        $('<span>', {text: '–°—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞: '})
            .css({'display': 'block'})
            .appendTo(containerRowReport);
        inputCopyRowToReport.appendTo(containerRowReport);

        $('<hr>').appendTo(containerMain);
        containerCopyUrl.appendTo(containerMain);
        containerRowReport.appendTo(containerMain);


        containerMain.css(sendel_row);
        containerMain.appendTo($(APPEND_ROWREPORT_ELEMENT));
    }

    function showMyString() {
        var module_full = $(".homework-subheader__theme-title")[0].innerText.split(".")[0];
        var module = module_full.split(":")[0].replace("–¢–µ–º–∞ ", "");
        const student = getStudentName();

        var course = $(".homework-course-info__name")[0].innerText;


        var reportRow = todayDateFormatted() + "\t" + student + "\t" + module + "\t \t" + window.location.href + "\t" + course;

        let containerMain = $('<div>', {id: 'sendel-container-main'});
        let containerRowReport = $('<div>', {id: 'sendel-copy-row'});
        let containerCopyUrl = $('<div>', {id: 'sendel-p-copy-url'});


        let done = $('<button>', {text: 'üëç –∑–∞—á–µ—Ç', class: 'skillbox-btn'})
            .css({'backgroundColor': '#2fa52f'})
            .css(button_css);
        let rework = $('<button>', {text: '‚úñÔ∏è –Ω–µ–∑–∞—á–µ—Ç', class: 'skillbox-btn'})
            .css({'backgroundColor': '#f84949'})
            .css(button_css);

        done.appendTo(containerRowReport)
        rework.appendTo(containerRowReport)

        let inputCopyRowToReport = $('<input>', {
            type: 'text',
            id: 'report',
            value: reportRow,
            name: 'sendel-copy-row',
            click: function () {
                this.select();
                document.execCommand("copy");
                $('#sendel-copy-row').append('  —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
            }
        })
            .css({"width": "100%", 'margin-bottom': '10px'});

        //–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞—á–µ—Ç/–Ω–µ–∑–∞—á–µ—Ç
        done.click(function () {
            var result = '–∑–∞—á–µ—Ç';
            generateResultAndCopyToBuffer(student, module, result, course)
            approveHomework();
        });

        rework.click(function () {
            var result = '–Ω–µ–∑–∞—á–µ—Ç';
            generateResultAndCopyToBuffer(student, module, result, course)
            rejectHomework();
        });

        //appends to containers
        $('<span>', {text: '–°—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞: '})
            .css({'display': 'block'})
            .appendTo(containerRowReport);
        inputCopyRowToReport.appendTo(containerRowReport);

        $('<hr>').appendTo(containerMain);
        containerCopyUrl.appendTo(containerMain);
        containerRowReport.appendTo(containerMain);


        containerMain.css(sendel_row);
        containerMain.appendTo($(APPEND_ROWREPORT_ELEMENT));
    }


    function addGreeting() {
        setTimeout(function poll() {
            const textAreaEditor = document.querySelector("app-comments-teacher .fr-view");


            if (!textAreaEditor) {
                setTimeout(poll, 500);
                return;
            }

//–ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –ø–æ–ª—è –º–µ–Ω—å—à–µ 21
           // console.log(textAreaEditor.innerHTML.length);
            //console.log(textAreaEditor.innerHTML);

            //setTimeout(()=>console.log(textAreaEditor.innerHTML, textAreaEditor.innerHTML.length), 2000);
            if (textAreaEditor.innerHTML.length < 21) {
                appendGreetingTo(textAreaEditor, getStudentName(), getModuleName(), getMessageCount());
textAreaEditor.replace("–î–æ–±—Ä—ã–π", "–î–∞");

            }
       //     else{
     //                                        const textAreaEditor2 = document.getElementsByClassName(".time-of-the-day");
     //                       console.log(textAreaEditor2.innerText);
        //    setTimeout(()=>textAreaEditor.replace("–î–æ–±—Ä—ã–π", "–î–∞"), 5000);}
     //      }
        });
    }

    function addGitlabSearchButton() {
        let student = getStudentName();
        if (student) {
            let gitlabUrl = "https://gitlab.skillbox.ru/search?group_id=&project_id=&repository_ref=&scope=users&search=" + student.replace(" ", "+");
            $('<a>', {
                text: 'Search ' + student + ' in Gitlab',
                class: 'info__status skb-p3',
                href: gitlabUrl,
                target: '_blank'
            }).appendTo($(".student__info"));
        }
    }


    function bakeHeader() {
        setTimeout(() => {
            compactHomeworkTitle();
            addCopyTokenButton();
            addGitlabSearchButton();
        }, 2000);
    }

    function compactHomeworkTitle() {
        $(".lesson-header-wrapper").css(user_panel_remove_sticky_and_paddings);
        $(".lesson-header-wrapper").css('padding', '5px');
        $(".homework-subheader__theme-title").css(user_panel_remove_sticky_and_paddings);
        $(".homework-course-info").css(user_panel_remove_sticky_and_paddings);
        $(".skb-froala-teacher-page-offset-toolbar").css('position', 'relative');
        $(".homework-subheader").css('padding', '0px 10px 0px 50px');
    }

    function addCopyTokenButton() {
        $('<button>', {
            text: 'üîë',
            class: 'ui-sb-button--default-circle ui-sb-button--view-circle-1 homework-course-info__button sendel-ct',
            uisbtooltip: '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', '_ngcontent-nta-c316': '',
        })
            .css({
                "border-radius": "10px",
                "cursor": "pointer",
                "width": "40px",
                "height": "40px",
            })
            .click(copyRefreshTokenToClipboard)
            .click(function () {
                $(this).addClass('over');
            })
            .mouseleave(function () {
                $(this).removeClass('over');
            })
            .appendTo($(".homework-course-info__buttons"));

        $(".ui-sb-button--view-circle-1").css("margin", "2px");
    }

    function copyRefreshTokenToClipboard() {
        const el = $('<textarea>', {
            text: localStorage.getItem("x-refresh-token")
        });

        $('body').append(el);
        el.select();
        document.execCommand('copy');
        el.remove();
    }

    function todayDateFormatted() {
        return new Date().toLocaleDateString('ru-RU');
    }

    //—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–∞
    function translit(word) {
        var answer = '';
        var converter = {
            'a': '–∞', 'b': '–±', 'v': '–≤', 'g': '–≥', 'd': '–¥',
            'e': '–µ', 'zh': '–∂', 'z': '–∑', 'i': '–∏',
            'y': '–π', 'k': '–∫', 'l': '–ª', 'm': '–º', 'n': '–Ω',
            'o': '–æ', 'p': '–ø', 'r': '—Ä', 's': '—Å', 't': '—Ç',
            'u': '—É', 'f': '—Ñ', 'h': '—Ö', 'c': '—Ü', 'ch': '—á',
            'sh': '—à', 'sch': '—â', 'y': '—ã', 'x': '–∫—Å',
            'yu': '—é', 'ya': '—è',

            'A': '–ê', 'B': '–ë', 'V': '–í', 'G': '–ì', 'D': '–î',
            'E': '–ï', 'Zh': '–ñ', 'Z': '–ó', 'I': '–ò',
            'Y': '–ô', 'K': '–ö', 'L': '–õ', 'M': '–ú', 'N': '–ù',
            'O': '–û', 'P': '–ü', 'R': '–†', 'S': '–°', 'T': '–¢',
            'U': '–£', 'F': '–§', 'H': '–•', 'C': '–¶', 'Ch': '–ß',
            'Sh': '–®', 'Sch': '–©', 'Y': '–´',
             'Yu': '–Æ', 'Ya': '–Ø'
        };

        for (var i = 0; i < word.length; ++i) {
            if (converter[word[i]] == undefined) {
                answer += word[i];
            } else {
                answer += converter[word[i]];
            }
        }

        return answer;
    }


    function appendGreetingTo(textAreaEditor, studentName, ModuleName, MessageCount) {
        var title;
        var title2;
        var first_name; // –ò–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞
        var flag_replaced; //—Ñ–ª–∞–≥ –∑–∞–º–µ–Ω—ã –¥–ª—è –∏–º–µ–Ω–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

        flag_replaced=1;
        first_name=studentName.split(" ")[0];

//—Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ –∏–º–µ–Ω–∏ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        function Greeting_plus_name(studentName) {
            title = GREETING_TITLE_WITH_NAME + studentName.split(" ")[0] + '!';
        }

            //–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∑–∞–º–µ–Ω–∞ –∏–º—ë–Ω
        switch (first_name) {
            case 'Shamil':
                studentName = studentName.replace("Shamil", "–®–∞–º–∏–ª—å");
                Greeting_plus_name(studentName);
                break;
            case '–ú–∏—à–∞':
                studentName = studentName.replace("Shamil", "–®–∞–º–∏–ª—å");
                Greeting_plus_name(studentName);
                break;
            case '–°–µ—Ä–µ–∂–∞':
                studentName = studentName.replace("–°–µ—Ä–µ–∂–∞", "–°–µ—Ä–≥–µ–π");
                Greeting_plus_name(studentName);
                break;
            case 'Doniyor':
                studentName = studentName.replace("Doniyor", "–î–æ–Ω–∏—ë—Ä");
                Greeting_plus_name(studentName);
                break;
            case 'Stas':
                studentName = studentName.replace("Stas", "–°—Ç–∞–Ω–∏—Å–ª–∞–≤");
                Greeting_plus_name(studentName);
                break;
            case '–î–∏–º–∞':
                studentName = studentName.replace("–î–∏–º–∞", "–î–º–∏—Ç—Ä–∏–π");
                Greeting_plus_name(studentName);
                break;
            default:
                flag_replaced = 0;
}


//–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–≥–ª–∞–≤–Ω—É—é –∏ —Å—Ç—Ä–æ—á–Ω—É—é –∏–º—è —Ñ–∞–º–∏–ª–∏—é –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ
        if (INSERT_CYRILLYC_NAME_IN_GREETING && /[–ê-–Ø][–∞-—è]+\s[–ê-–Ø][–∞-—è]+/u.test(studentName)) {
            Greeting_plus_name(studentName);
        } else if (INSERT_CYRILLYC_NAME_IN_GREETING && /[A-Z][a-z]+\s[A-Z][a-z]+/u.test(studentName)) {
            //–∏–Ω–∞—á–µ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è
            title = GREETING_TITLE_WITH_NAME + translit(studentName.split(" ")[0]) + '!';
        } else if (INSERT_CYRILLYC_NAME_IN_GREETING && /[A-z]+\s[A-z]+/u.test(studentName)) {
            //–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è
            title = GREETING_TITLE_WITH_NAME + translit(studentName.split(" ")[0]).charAt(0).toUpperCase()
                + translit(studentName.split(" ")[0]).slice(1) + '!';
        } else if (flag_replaced =0){
            title = GREETING_TITLE_WITHOUT_NAME;
        }


        //–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?
        var flagNewMessage;
        for (let element of MessageCount) {

            (element.innerText == "2 —Å–æ–æ–±—â–µ–Ω–∏—è" || element.innerText == "1 —Å–æ–æ–±—â–µ–Ω–∏–µ" ? flagNewMessage = true : "")
        }

        //  (MessageCount.last().innerText == "2 —Å–æ–æ–±—â–µ–Ω–∏—è" ? flagNewMessage = true : "")


        textAreaEditor.insertAdjacentHTML('afterbegin', '<p>' + title +
            '</p><br/><br/><p>' +
            (((ModuleName == '3. –û–ø–µ—Ä–∞—Ç–æ—Ä—ã, –≤—ã—Ä–∞–∂–µ–Ω–∏—è' || ModuleName == '2. –í–≤–µ–¥–µ–Ω–∏–µ –≤ –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏') && flagNewMessage == true) ? GREETING_MIDDLE_SECOND : GREETING_MIDDLE)

            + '</p><br/><p>' + GREETING_FOOTER + '</p>');
    }


})(window);
